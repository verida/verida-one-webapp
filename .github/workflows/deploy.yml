name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "develop"

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

# Set the environment variables from the repository configuration variables
env:
  NODE_ENV: ${{ vars.NODE_ENV }}
  PUBLIC_URL: ${{ vars.RESOURCES_CDN_URL }}
  EXTEND_ESLINT: ${{ vars.EXTEND_ESLINT }}
  REACT_APP_VERIDA_ONE_CONTEXT_NAME: ${{ vars.REACT_APP_VERIDA_ONE_CONTEXT_NAME }}
  REACT_APP_PROFILE_SCHEMA_URL: ${{ vars.REACT_APP_PROFILE_SCHEMA_URL }}
  REACT_APP_WALLET_PROVIDER_API_BASE_URL: ${{ vars.REACT_APP_WALLET_PROVIDER_API_BASE_URL }}
  REACT_APP_ENABLE_DEV_FEATURES: ${{ vars.REACT_APP_ENABLE_DEV_FEATURES }}
  REACT_APP_ENABLE_MOCK_DATA: ${{ vars.REACT_APP_ENABLE_MOCK_DATA }}

jobs:
  build:
    name: Build and test frontend
    runs-on: ubuntu-latest

    steps:
      - name: Environment variables
        run: echo "PUBLIC_URL=$PUBLIC_URL"

      - name: Checkout repository
        uses: actions/checkout@v2.5.0

      - name: Define node version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Set up node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test frontend
        run: yarn run test

      - name: Build frontend
        run: yarn run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build
          path: build

  deployS3:
    name: Deploy frontend to S3
    if: github.repository == 'verida/verida-one-webapp'
    needs: build
    runs-on: ubuntu-latest

    timeout-minutes: 5

    steps:
      - name: Download build artifacts
        id: download
        uses: actions/download-artifact@v3.0.2
        with:
          name: build

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks --delete --exclude '.git*/*'
        env:
          SOURCE_DIR: ${{steps.download.outputs.download-path}}
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_REGION: ${{ secrets.S3_BUCKET_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  invalidateCF:
    name: Invalidate CloudFront
    if: github.repository == 'verida/verida-one-webapp'
    needs: deployS3
    runs-on: ubuntu-latest

    steps:
    - name: Invalidate
      uses: chetan/invalidate-cloudfront-action@v2
      env:
        DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        PATHS: '/'
        AWS_REGION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
