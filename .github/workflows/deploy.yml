name: Deploy

# TODO: Rework the triggers on push, restrict to  push on 'main' and 'develop'.
# Enabled on all branches for now while we fine-tune the workflow and merge it up to 'main'
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy on'
        type: environment
        required: true
  push:

# TODO: Remove the environment fallback
concurrency:
  group: ${{ github.workflow }}-${{ inputs.environment || 'development_testnet' }}

jobs:
  deploy:
    name: Deploy
    if: github.repository == 'verida/verida-one-webapp'
    environment:
      # TODO: Remove the environment fallback
      # Environment fallback is helpfull while fine-tuning the workflow but it should not be needed if the environment can be figured out based on the workflow branch (particularly on push trigger)
      name: ${{ inputs.environment || 'development_testnet' }}
      url: ${{ vars.URL }}
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ${{ vars.NODE_ENV }}
      PUBLIC_URL: ${{ vars.RESOURCES_CDN_URL }}
      EXTEND_ESLINT: ${{ vars.EXTEND_ESLINT }}
      REACT_APP_VERIDA_ONE_CONTEXT_NAME: ${{ vars.REACT_APP_VERIDA_ONE_CONTEXT_NAME }}
      REACT_APP_PROFILE_SCHEMA_URL: ${{ vars.REACT_APP_PROFILE_SCHEMA_URL }}
      REACT_APP_WALLET_PROVIDER_API_BASE_URL: ${{ vars.REACT_APP_WALLET_PROVIDER_API_BASE_URL }}
      REACT_APP_ENABLE_DEV_FEATURES: ${{ vars.REACT_APP_ENABLE_DEV_FEATURES }}
      REACT_APP_ENABLE_MOCK_DATA: ${{ vars.REACT_APP_ENABLE_MOCK_DATA }}

    steps:
      - name: Environment variables
        run: |
          echo "NODE_ENV=$NODE_ENV"
          echo "REACT_APP_VERIDA_ONE_CONTEXT_NAME=$REACT_APP_VERIDA_ONE_CONTEXT_NAME"
          echo "REACT_APP_PROFILE_SCHEMA_URL=$REACT_APP_PROFILE_SCHEMA_URL"
          echo "REACT_APP_WALLET_PROVIDER_API_BASE_URL=$REACT_APP_WALLET_PROVIDER_API_BASE_URL"
          echo "REACT_APP_ENABLE_DEV_FEATURES=$REACT_APP_ENABLE_DEV_FEATURES"
          echo "REACT_APP_ENABLE_MOCK_DATA=$REACT_APP_ENABLE_MOCK_DATA"
          echo "PUBLIC_URL=$PUBLIC_URL"

      - name: Checkout repository
        uses: actions/checkout@v2.5.0

      - name: Define node version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Set up node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test frontend
        run: yarn run test

      - name: Build frontend
        run: yarn run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build
          path: build

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks --delete --exclude '.git*/*'
        env:
          SOURCE_DIR: 'build'
          AWS_REGION: ${{ secrets.S3_BUCKET_REGION }}
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/'
          AWS_REGION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
